version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Logging in to Docker Hub...
      - echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - IMAGE_TAG=$(grep -r "newTag" kustomization.yaml | cut -f2 -d'"' | sed 's/^://')
      - echo "$IMAGE_TAG"
      - echo "$IMAGE_REPO_NAME:$IMAGE_TAG"
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker run --name $IMAGE_REPO_NAME -d -p 80:5000 -e PORT=5000 $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - sleep 5
      - |
        response=$(curl -s http://localhost)
        echo Response $response
        if echo "$response" | grep -q "Hello world!"; 
          then
            echo Image seems to be working normally
        else
          echo image is not working as expected
          echo we delete the image to ensure that the image will not be pushed
          docker rmi $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
        fi
      - docker rm -f $IMAGE_REPO_NAME
  post_build:
    commands:
      - echo Build completed on `date`
      - |
        push_release () {
          echo Pushing the Docker image...
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
          URL=$(git remote -v | grep push | cut -f1 -d ' ' | cut -f2)
          URL_NOPRO=$(echo $URL | sed -e 's/^........//g')
          REMOTE="https://$GIT_USER:$GIT_PASSWORD@${URL_NOPRO}"
          git remote add codebuild $REMOTE
          git tag $IMAGE_TAG
          git push codebuild $IMAGE_TAG 
        }
          push_release

     # - echo Build started on `date`
     # - RUN=$(aws deploy push --application-name $APPLICATION_NAME --s3-location s3://${S3_NAME}/${APPLICATION_NAME}.zip --ignore-hidden-files --region us-east-1 | sed -n 2p  | sed 's/<//g' | sed 's/>//g' | sed 's/ deployment-group-name/ alpinehelloworld-group/g' | sed 's/ deployment-config-name/ CodeDeployDefault.AllAtOnce/g' | sed 's/ description/ deployment/g')
     # - $RUN

